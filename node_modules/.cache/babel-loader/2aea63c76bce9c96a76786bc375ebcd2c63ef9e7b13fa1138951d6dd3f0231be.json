{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\Front_End\\\\react_source\\\\2024react\\\\defaultapp_1\\\\src\\\\components\\\\Body.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body(props) {\n  // 렌더링\n  // 원시형식 + 배열이 올 수 있음. => 표현식 : 값형식 or 배열 => 객체가 오지 못한다.\n  // 표현식은 {} 안에 표시해야함\n  // 문장중에 값을 하나 만들수 있으면 표현식.\n  let a = 100;\n  let b = 'hello';\n  let c = [10, 20, 30];\n  //let o = {name:'hong', age:20};\n  //name, age : 비구조화 문법을 사용해서 표현한다.\n  //값\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [a, \"+\", b, \"+\", c, \"+\", o.name, \"+\", o.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n  //content : 사용자 생성\n  //children : 정의된 props\n}\n_c = Body;\nBody.defaultProps = {\n  content: 'default body content'\n};\n//props의 default값을 지정.\n//\n\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["Body","props","a","b","c","_jsxDEV","children","content","fileName","_jsxFileName","lineNumber","columnNumber","o","name","age","_c","defaultProps","$RefreshReg$"],"sources":["C:/web/Front_End/react_source/2024react/defaultapp_1/src/components/Body.js"],"sourcesContent":["function Body(props) {\r\n    // 렌더링\r\n    // 원시형식 + 배열이 올 수 있음. => 표현식 : 값형식 or 배열 => 객체가 오지 못한다.\r\n    // 표현식은 {} 안에 표시해야함\r\n    // 문장중에 값을 하나 만들수 있으면 표현식.\r\n    let a = 100;\r\n    let b = 'hello';\r\n    let c = [10,20,30];\r\n    //let o = {name:'hong', age:20};\r\n    //name, age : 비구조화 문법을 사용해서 표현한다.\r\n    //값\r\n\r\n    return (<div>\r\n        <p>{ props.content }</p>\r\n        <p>{ props.children }</p>\r\n        <br/>\r\n        <p>\r\n            {a}+{b}+{c}+{o.name}+{o.age}    \r\n        </p>\r\n    </div>);\r\n    //content : 사용자 생성\r\n    //children : 정의된 props\r\n\r\n}\r\n\r\nBody.defaultProps = {\r\n    content : 'default body content'\r\n}\r\n//props의 default값을 지정.\r\n//\r\n\r\nexport default Body;"],"mappings":";;AAAA,SAASA,IAAIA,CAACC,KAAK,EAAE;EACjB;EACA;EACA;EACA;EACA,IAAIC,CAAC,GAAG,GAAG;EACX,IAAIC,CAAC,GAAG,OAAO;EACf,IAAIC,CAAC,GAAG,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC;EAClB;EACA;EACA;;EAEA,oBAAQC,OAAA;IAAAC,QAAA,gBACJD,OAAA;MAAAC,QAAA,EAAKL,KAAK,CAACM;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBN,OAAA;MAAAC,QAAA,EAAKL,KAAK,CAACK;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBN,OAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLN,OAAA;MAAAC,QAAA,GACKJ,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACC,CAAC,EAAC,GAAC,EAACQ,CAAC,CAACC,IAAI,EAAC,GAAC,EAACD,CAAC,CAACE,GAAG;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;EACN;EACA;AAEJ;AAACI,EAAA,GAvBQf,IAAI;AAyBbA,IAAI,CAACgB,YAAY,GAAG;EAChBT,OAAO,EAAG;AACd,CAAC;AACD;AACA;;AAEA,eAAeP,IAAI;AAAC,IAAAe,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}