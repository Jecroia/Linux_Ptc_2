{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\Front_End\\\\react_source\\\\2024react\\\\defaultapp_1\\\\src\\\\App.js\";\nimport Header from './components/Header.js';\nimport Body from './components/Body.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uC81C\\uBAA9 1\\uBC88\",\n      titlesub: \"\\uBD80\\uAC00 \\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uC81C\\uBAA9 2\\uBC88\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" body \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true)\n  //flagment : 태그를 하나로 묶기 위해 리액트에서만 사용하는 태그.\n  ;\n}\n_c = App;\nexport default App;\n\n//jsx : javascript + xml -> 리액트가 사용.\n//jsx App: 컴포넌트 -> ui를 만들어냄.\n//클래스 컴포넌트 : 권장 X\n//함수 컴포넌트 : 이것만 지원함.\n//->사용자 태그\n//tag들의 집합을 반환한다.\n//return은 하나의 태그만 리턴할 수 있음.\n//Component를 만들때 소문자로 만들면 안 된다. 왜? 함수와 비교하기 위해.\n//component : 쪼갤수 없는 요소. 독립적으로도 실행 가능하면서도 연계 역시 가능\n//component의 속성 : property -> props\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Body","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","title","titlesub","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/web/Front_End/react_source/2024react/defaultapp_1/src/App.js"],"sourcesContent":["import Header from './components/Header.js';\nimport Body from './components/Body.js';\n\nfunction App() {\n  return (<>\n    <Header title = \"제목 1번\" titlesub = \"부가 내용\"/>\n    <Header title = \"제목 2번\"/>\n    <Body> <button> body </button></Body>\n  </>\n    //flagment : 태그를 하나로 묶기 위해 리액트에서만 사용하는 태그.\n  );\n}\n\nexport default App;\n\n//jsx : javascript + xml -> 리액트가 사용.\n//jsx App: 컴포넌트 -> ui를 만들어냄.\n//클래스 컴포넌트 : 권장 X\n//함수 컴포넌트 : 이것만 지원함.\n//->사용자 태그\n//tag들의 집합을 반환한다.\n//return은 하나의 태그만 리턴할 수 있음.\n//Component를 만들때 소문자로 만들면 안 된다. 왜? 함수와 비교하기 위해.\n//component : 쪼갤수 없는 요소. 독립적으로도 실행 가능하면서도 연계 역시 가능\n//component의 속성 : property -> props"],"mappings":";AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAQH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACNJ,OAAA,CAACH,MAAM;MAACQ,KAAK,EAAG,sBAAO;MAACC,QAAQ,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5CV,OAAA,CAACH,MAAM;MAACQ,KAAK,EAAG;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzBV,OAAA,CAACF,IAAI;MAAAM,QAAA,GAAC,GAAC,eAAAJ,OAAA;QAAAI,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACrC;EACA;EAAA;AAEJ;AAACC,EAAA,GARQR,GAAG;AAUZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}