{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\Front_End\\\\react_source\\\\2024react\\\\defaultapp_1\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" App Component \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" App Component2 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true)\n  //flagment : 태그를 하나로 묶기 위해 리액트에서만 사용하는 태그.\n  ;\n}\n_c = App;\nexport default App;\n\n//jsx : javascript + xml -> 리액트가 사용.\n//jsx App: 컴포넌트 -> ui를 만들어냄.\n//클래스 컴포넌트 : 권장 X\n//함수 컴포넌트 : 이것만 지원함.\n//->사용자 태그\n//tag들의 집합을 반환한다.\n//return은 하나의 태그만 리턴할 수 있음.\n//Component를 만들때 소문자로 만들면 안 된다. 왜? 함수와 비교하기 위해.\n//component : 쪼갤수 없는 요소.\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/web/Front_End/react_source/2024react/defaultapp_1/src/App.js"],"sourcesContent":["function App() {\n  return (<>\n    <h1> App Component </h1>\n    <h1> App Component2 </h1>\n    </>\n    //flagment : 태그를 하나로 묶기 위해 리액트에서만 사용하는 태그.\n  );\n}\n\nexport default App;\n\n//jsx : javascript + xml -> 리액트가 사용.\n//jsx App: 컴포넌트 -> ui를 만들어냄.\n//클래스 컴포넌트 : 권장 X\n//함수 컴포넌트 : 이것만 지원함.\n//->사용자 태그\n//tag들의 집합을 반환한다.\n//return은 하나의 태그만 리턴할 수 있음.\n//Component를 만들때 소문자로 만들면 안 된다. 왜? 함수와 비교하기 위해.\n//component : 쪼갤수 없는 요소."],"mappings":";;AAAA,SAASA,GAAGA,CAAA,EAAG;EACb,oBAAQC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACNF,OAAA;MAAAE,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBN,OAAA;MAAAE,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACvB;EACF;EAAA;AAEJ;AAACC,EAAA,GAPQR,GAAG;AASZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}